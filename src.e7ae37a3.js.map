{"version":3,"sources":["scripts/resize.js","scripts/preprocessing/seasonalTrends.js","scripts/preprocessing/inflation.js","scripts/graphics/seasonalTrends.js","scripts/graphics/inflation.js","scripts/preprocessing/categories.js","scripts/graphics/categories.js","index.js"],"names":["updateResize","svgSizes","window","getComputedStyle","d3","select","node","vizDivSizes","glob","sizes","vizSvgSizes","width","parseFloat","slice","height","innerWidth","margin","left","right","innerHeight","top","bottom","main","dataNorm","seasonalTrends","dicoData","forEach","d","product","push","date","Date","parse","value","data","key","sort","a","b","tmpSeparator","tmpDate","newValue","getMonth","originalDate","originalYear","getFullYear","tmpList","name","values","minX","maxX","minY","min","x","maxY","max","mainData","selectedProd","current_selection","inflationProducts","inflation","products","productGrowthRate","Set","Array","from","map","category","includes","filter","rateOfChange","i","length","dateStr","undefined","controls","append","text","style","attr","on","property","reBuild","selectAll","enter","build","remove","svg","xScale","scaleTime","domain","range","yScale","scaleLinear","xAxis","axisBottom","tickFormat","timeFormat","yAxis","axisLeft","format","seasons","start","end","seasonsScale","scaleOrdinal","season","svgInfos","getBoundingClientRect","middleX","middleY","divTooltip","offset","call","lineGroup","dataYear","datum","line","e","y","event","pageX","tooltip","offsetY","pageY","html","colorScale","gpeLegend","gpe","widthLegend","opacityFunc","selection","prototype","moveToFront","each","parentNode","appendChild","raise","categories","out","same_same","same_diff","diff_same","group","groupD","dataGlob","charAt","toUpperCase","current_gpe","console","log","offsetX","resize","csv","then","json","preprocessSeason","preprocessInfl","preprocessCat","addEventListener"],"mappings":"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","file":"src.e7ae37a3.js","sourceRoot":"../src","sourcesContent":["/**\n *\n */\nexport function updateResize () {\n  const svgSizes = window.getComputedStyle(d3.select('#vizualization-svg1').node())\n  const vizDivSizes = window.getComputedStyle(d3.select('#vizualization-svg1').node())\n  glob.sizes.vizSvgSizes.width = parseFloat(svgSizes.width.slice(0, -2))\n  glob.sizes.vizSvgSizes.height = parseFloat(svgSizes.height.slice(0, -2))\n  glob.sizes.vizSvgSizes.innerWidth = glob.sizes.vizSvgSizes.width - glob.sizes.vizSvgSizes.margin.left - glob.sizes.vizSvgSizes.margin.right\n  glob.sizes.vizSvgSizes.innerHeight = glob.sizes.vizSvgSizes.height - glob.sizes.vizSvgSizes.margin.top - glob.sizes.vizSvgSizes.margin.bottom\n  glob.sizes.vizDivSizes.width = parseFloat(vizDivSizes.width.slice(0, -2))\n  glob.sizes.vizDivSizes.height = parseFloat(vizDivSizes.height.slice(0, -2))\n}\n","/**\n * @param dataNorm\n * @param seasonalTrends\n */\nexport function main(dataNorm, seasonalTrends) {\n  /* We would like something like this:\n                [\n                    {\n                        name: 'product',\n                        values: [\n                            {\n                                date: '2018-01-01',\n                                value: 1\n                            },\n                            ...\n                        ]\n                    }\n                ]\n                */\n  const dicoData = {}\n  dataNorm.forEach(function (d) {\n    if (!dicoData[d.product]) {\n      dicoData[d.product] = []\n    }\n    dicoData[d.product].push({\n      date: Date.parse(d.date),\n      value: parseFloat(d.value)\n    })\n  })\n  const data = []\n  for (const key in dicoData) {\n    dicoData[key].sort((a, b) => a.date - b.date)\n    // convert back dates in strings\n    const tmpSeparator = {}\n    dicoData[key].forEach(function (d) {\n      const tmpDate = new Date(d.date)\n      const newValue = {\n        date: new Date(1995, (tmpDate).getMonth(), 1),\n        value: d.value,\n        originalDate: tmpDate,\n        originalYear: tmpDate.getFullYear()\n      }\n      if (!tmpSeparator[newValue.originalYear]) {\n        tmpSeparator[newValue.originalYear] = []\n      }\n      tmpSeparator[newValue.originalYear].push(newValue)\n    })\n    // map it to a list of list\n    const tmpList = []\n    for (const key in tmpSeparator) {\n      tmpList.push(tmpSeparator[key])\n    }\n    data.push({\n      name: key,\n      values: tmpList,\n      minX: new Date(1995, 0, 1),\n      maxX: new Date(1995, 11, 1),\n      minY: d3.min(dicoData[key], x => x.value),\n      maxY: d3.max(dicoData[key], x => x.value)\n    })\n  }\n  glob.data.seasonalTrends = {\n    mainData: data,\n    selectedProd: seasonalTrends,\n    current_selection: seasonalTrends[0]\n  }\n}\n","/**\n * @param dataNorm\n * @param inflationProducts, list of products to highlight\n * @param inflationProducts\n * @param inflation\n */\nexport function main (dataNorm, inflationProducts, inflation) {\n  // Create main object\n  const products = [...new Set(Array.from(dataNorm.map(x => x.product)))]\n  const productGrowthRate = products.map(product => {\n    const category = inflationProducts.includes(product) ? 1 : 0\n    const data = dataNorm.filter(x => x.product === product)\n    const rateOfChange = []\n    for (let i = 1; i < data.length; i++) {\n      rateOfChange.push({\n        product: product,\n        dateStr: data[i].date,\n        date: new Date(data[i].date),\n        value: (data[i].value - data[i - 1].value) / data[i - 1].value * 100,\n        category: category\n      })\n    }\n    return {\n      product: product,\n      category: category,\n      data: rateOfChange\n    }\n  })\n  glob.data.inflation = {\n    minX: d3.min(productGrowthRate, x => d3.min(x.data, d => d.date)),\n    maxX: d3.max(productGrowthRate, x => d3.max(x.data, d => d.date)),\n    minY: d3.min(productGrowthRate, x => d3.min(x.data, d => d.value)),\n    maxY: d3.max(productGrowthRate, x => d3.max(x.data, d => d.value))\n  }\n  productGrowthRate.push({\n    product: 'Inflation',\n    category: 2,\n    data: inflation.map((d, i) => {\n      if (i > 0) {\n        return {\n          product: 'Inflation',\n          date: new Date(d.date),\n          value: (d['consumer price index'] - inflation[i - 1]['consumer price index']) / inflation[i - 1]['consumer price index'] * 100,\n          category: 2\n        }\n      }\n    }).filter(x => x !== undefined)\n  })\n  glob.data.inflation.data = productGrowthRate\n}\n","/**\n * @param data\n */\nexport function main() {\n  if (glob.data.seasonalTrends.mainData === undefined) {\n    return\n  }\n  const controls = d3.select('#controls1')\n  controls\n    .append('p')\n    .text('Products')\n    .style('display', 'inline-block')\n\n  controls\n    .append('select')\n    .attr('id', 'selectProduct')\n    .on('change', function () {\n      glob.data.seasonalTrends.current_selection = d3.select('#selectProduct').property('value')\n      reBuild()\n    })\n    .selectAll('option')\n    .data(glob.data.seasonalTrends.selectedProd)\n    .enter()\n    .append('option')\n    .text(d => d)\n    .attr('value', function (d) { return d })\n  glob.data.seasonalTrends.current_selection = d3.select('#selectProduct').property('value')\n  build()\n}\n/**\n *\n */\nfunction reBuild() {\n  d3.select('#vizualization-svg1')\n    .selectAll('*')\n    .remove()\n  build()\n}\n/**\n *\n */\nfunction build() {\n  const data = glob.data.seasonalTrends.mainData.filter(d => d.name === glob.data.seasonalTrends.current_selection)[0]\n  const svg = d3.select('#vizualization-svg1')\n  // Create scales\n  const xScale = d3.scaleTime()\n    .domain([data.minX, data.maxX])\n    .range([0, glob.sizes.vizSvgSizes.innerWidth])\n  const yScale = d3.scaleLinear()\n    .domain([data.minY, data.maxY])\n    .range([glob.sizes.vizSvgSizes.innerHeight, 0])\n\n  // Create axes\n  const xAxis = d3.axisBottom(xScale)\n    .tickFormat(d3.timeFormat('%b'))\n  const yAxis = d3.axisLeft(yScale)\n    .tickFormat(d3.format('.2f'))\n  // Adding seasons rects\n  const seasons = [\n    {\n      name: 'Winter',\n      start: new Date(1995, 0, 1),\n      end: new Date(1995, 2, 20)\n    },\n    {\n      name: 'Spring',\n      start: new Date(1995, 2, 20),\n      end: new Date(1995, 5, 21)\n    },\n    {\n      name: 'Summer',\n      start: new Date(1995, 5, 21),\n      end: new Date(1995, 8, 22)\n    },\n    {\n      name: 'Fall',\n      start: new Date(1995, 8, 22),\n      end: new Date(1995, 11, 1)\n    }\n  ]\n  const seasonsScale = d3.scaleOrdinal()\n    .domain([...new Set(Array.from(seasons.map(d => d.name)))])\n    .range(['blue', 'lightgreen', 'green', 'orange'])\n  svg.append('g')\n    .attr('id', 'seasons-container')\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left}, ${glob.sizes.vizSvgSizes.margin.top})`)\n    .selectAll('.seasons')\n    .data(seasons)\n    .enter()\n    .append('rect')\n    .attr('class', 'season')\n    .attr('x', season => xScale(season.start))\n    .attr('y', 0)\n    .attr('width', season => xScale(season.end) - xScale(season.start))\n    .attr('height', glob.sizes.vizSvgSizes.innerHeight)\n    .attr('fill', season => seasonsScale(season.name))\n    .attr('stroke', '#f0f0f0')\n    .attr('stroke-width', '1')\n    .attr('opacity', 0.5)\n    .attr('id', season => season.name)\n    .on('mouseenter', function (season) {\n      d3.select(this)\n        .attr('opacity', 0.75)\n      const svgInfos = d3.select('#vizualization-svg1').node().getBoundingClientRect()\n      const divInfos = d3.select('#vizualization-div1').node().getBoundingClientRect()\n      const margingContainerGraphic = 10\n      const middleX = svgInfos.left +\n        glob.sizes.vizSvgSizes.margin.left +\n        margingContainerGraphic +\n        xScale(season.start) + (xScale(season.end) - xScale(season.start)) / 2\n      const middleYMarginTooltip = 10\n      const middleY = svgInfos.top +\n        glob.sizes.vizSvgSizes.margin.top -\n        middleYMarginTooltip\n      const divTooltip = d3.select('#vizualization-div1')\n        .append('div')\n        .attr('id', 'tooltip')\n        .style('position', 'absolute')\n        .style('z-index', '10')\n        .style('background', 'white')\n        .style('padding', '10px')\n        .style('top', middleY + 'px')\n        .style('background', 'transparent')\n        .style('text-align', 'center')\n      divTooltip.append('p')\n        .text(season.name)\n        .style('background', 'transparent')\n      divTooltip.append('img')\n        .attr('src', 'images/' + season.name + '.png')\n        .style('width', '25px')\n        .style('background', 'transparent')\n      d3.select('#tooltip')\n        .style('left', function () {\n          const offset = d3.select(this).node().getBoundingClientRect().width / 2\n          return (middleX - offset) + 'px'\n        }\n        )\n        .style('top', function () {\n          const offset = d3.select(this).node().getBoundingClientRect().height\n          return (middleY - offset) + 'px'\n        })\n    })\n    .on('mouseleave', function (season) {\n      d3.select(this)\n        .attr('opacity', 0.5)\n      d3.select('#tooltip')\n        .remove()\n    })\n  // Create groups and plot axis\n  svg.append('g')\n    .attr('class', 'x axis')\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left}, ${glob.sizes.vizSvgSizes.innerHeight + glob.sizes.vizSvgSizes.margin.top})`)\n    .call(xAxis)\n  svg.append('g')\n    .attr('class', 'y axis')\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left}, ${glob.sizes.vizSvgSizes.margin.top})`)\n    .call(yAxis)\n  // Create line plots\n  const lineGroup = svg.append('g')\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left}, ${glob.sizes.vizSvgSizes.margin.top})`)\n\n  data.values.forEach(function (dataYear) {\n    lineGroup.append('path')\n      .attr('class', 'curve')\n      .datum(dataYear)\n      .attr('d', d3.line()\n        .x(function (e) { return xScale(e.date) })\n        .y(function (e) { return yScale(e.value) })\n      )\n      .attr('stroke', 'black')\n      .attr('stroke-width', '2')\n      .attr('fill', 'none')\n      .on('mouseenter', function (d) {\n        d3.select(this)\n          .attr('stroke', 'red')\n          .attr('stroke-width', '4')\n        d3.select('body')\n          .append('div')\n          .attr('id', 'tooltip')\n          .style('position', 'absolute')\n          .style('z-index', '10')\n          .style('background', 'white')\n          .style('padding', '10px')\n          .style('border-radius', '5px')\n          .style('box-shadow', '1px 1px 5px black')\n          .style('left', (d3.event.pageX + glob.sizes.tooltip.offsetY) + 'px')\n          .style('top', (d3.event.pageY + glob.sizes.tooltip.offsetY) + 'px')\n          .html(`<strong>${d.map(a => a.originalYear)[0]}</strong>`)\n      })\n      .on('mouseleave', function (d) {\n        d3.select(this)\n          .attr('stroke', 'black')\n          .attr('stroke-width', '2')\n        d3.select('#tooltip')\n          .remove()\n      }\n      )\n  })\n}\n","/**\n *\n */\nexport function main () {\n  const data = glob.data.inflation\n  // main svg\n  const svg = d3.select('#vizualization-svgInfl')\n  // Create scales\n  const xScale = d3.scaleTime()\n    .domain([data.minX, data.maxX])\n    .range([0, glob.sizes.vizSvgSizes.innerWidth])\n  const yScale = d3.scaleLinear()\n    .domain([data.minY, data.maxY])\n    .range([glob.sizes.vizSvgSizes.innerHeight, 0])\n  const colorScale = d3.scaleOrdinal()\n    .domain([0, 1, 2])\n    .range(['black', 'green', 'red'])\n  // Creates groups\n  svg.append('g')\n    .call(d3.axisBottom(xScale))\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left},${glob.sizes.vizSvgSizes.height - glob.sizes.vizSvgSizes.margin.bottom})`)\n  svg.append('g')\n    .call(d3.axisLeft(yScale))\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left},${glob.sizes.vizSvgSizes.margin.top})`)\n  // add legend\n  const sizes = glob.sizes.vizSvgSizes\n  const gpeLegend = svg.append('g')\n    .attr('transform', (d, i) => `translate(${(sizes.width - sizes.margin.left - sizes.margin.right) / 2 + sizes.margin.left},${sizes.margin.top})`)\n  const gpe = gpeLegend\n    .selectAll('.legendElem')\n    .data([{ text: 'Inflation', category: 2 }, { text: 'Products with significant deviations from inflation', category: 1 }, { text: 'Other products', category: 0 }])\n    .enter()\n    .append('g')\n    .attr('transform', (d, i) => `translate(0,${20 * (i + 1)})`)\n  gpe.append('rect')\n    .attr('width', '50px')\n    .attr('height', '2px')\n    .attr('transform', 'translate(0,-7)')\n    .attr('fill', d => colorScale(d.category))\n  gpe.append('text')\n    .attr('transform', 'translate(60,0)')\n    .attr('font-size', '14px')\n    .text(d => d.text)\n  const widthLegend = gpeLegend.node().getBoundingClientRect().width\n  gpeLegend\n    .attr('transform', `translate(${(sizes.width - sizes.margin.left - sizes.margin.right - widthLegend) / 2 + sizes.margin.left},${sizes.margin.top})`)\n  // plot curves\n  const opacityFunc = category => category === 0 ? 0.5 : 1\n  // to move to front on hover : https://stackoverflow.com/questions/14167863/how-can-i-bring-a-circle-to-the-front-with-d3\n  d3.selection.prototype.moveToFront = function () {\n    return this.each(function () {\n      this.parentNode.appendChild(this)\n    })\n  }\n  svg.append('g')\n    .attr('id', 'curvesInfl')\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left}, ${glob.sizes.vizSvgSizes.margin.top})`)\n    .selectAll('path')\n    .data(data.data)\n    .enter()\n    .append('path')\n    .datum(d => d.data.filter(x => x.date > data.minX))\n    .attr('d', d3.line()\n      .x(function (e) { return xScale(e.date) })\n      .y(function (e) { return yScale(e.value) })\n    )\n    .attr('stroke', d => { return colorScale(d.map(x => x.category)[0]) })\n    .attr('stroke-width', '2')\n    .attr('fill', 'none')\n    .attr('opacity', d => opacityFunc(d.map(x => x.category)[0]))\n    .on('mouseenter', function (d) {\n      d3.select(this).raise()\n      d3.select(this)\n        .attr('opacity', 1)\n        .attr('stroke-width', '4')\n        .attr('stroke', 'orange')\n      d3.select('body')\n        .append('div')\n        .attr('id', 'tooltip')\n        .style('position', 'absolute')\n        .style('z-index', '10')\n        .style('background', 'white')\n        .style('padding', '10px')\n        .style('border-radius', '5px')\n        .style('box-shadow', '1px 1px 5px black')\n        .style('left', (d3.event.pageX + glob.sizes.tooltip.offsetY) + 'px')\n        .style('top', (d3.event.pageY + glob.sizes.tooltip.offsetY) + 'px')\n        .html(`<strong>${d.map(x => x.product)[0]}</strong>`)\n    })\n    .on('mouseleave', function (d) {\n      d3.select(this)\n        .attr('opacity', opacityFunc(d.map(x => x.category)[0]))\n        .attr('stroke-width', '2')\n        .attr('stroke', colorScale(d.map(x => x.category)[0]))\n      d3.select('#tooltip')\n        .remove()\n      d3.select('#vizualization-svgInfl').select('#curvesInfl').selectAll('path')\n        .filter(function (d) {\n          return d.map(x => x.category === 2)[0]\n        })\n        .attr('stroke-width', '2')\n        .raise()\n    })\n}\n","/**\n * @param dataNorm\n * @param categories\n */\nexport function main (dataNorm, categories) {\n  const out = {\n    same_same: [],\n    same_diff: [],\n    diff_same: []\n  }\n  Array.from(['same_same', 'same_diff', 'diff_same']).forEach(function (category) {\n    out[category] = categories[category].map(function (group, i) {\n      const groupD = {\n        name: group.name,\n        data: group.data.map(function (product) {\n          return dataNorm.filter(x => x.product === product).map(x => {\n            return {\n              product: x.product,\n              date: new Date(x.date),\n              value: parseFloat(x.value)\n            }\n          })\n        })\n      }\n      groupD.minX = d3.min(groupD.data, x => d3.min(x, d => d.date))\n      groupD.maxX = d3.max(groupD.data, x => d3.max(x, d => d.date))\n      groupD.minY = d3.min(groupD.data, x => d3.min(x, d => d.value))\n      groupD.maxY = d3.max(groupD.data, x => d3.max(x, d => d.value))\n      return groupD\n    })\n  })\n  glob.data.categories = out\n}\n","/**\n *\n */\nexport function main () {\n  const dataGlob = glob.data.categories\n  Array.from(['same_same', 'same_diff', 'diff_same']).forEach(function (category) {\n    const data = dataGlob[category]\n    const controls = d3.select('#controls' + category.charAt(0).toUpperCase() + category.slice(1))\n    // controls\n    controls\n      .append('p')\n      .text('Group')\n      .style('display', 'inline-block')\n    controls\n      .append('select')\n      .attr('id', 'selectGpe' + category)\n      .on('change', function () {\n        glob.data.categories[category].current_gpe = d3.select(this).property('value')\n        // Rebuild\n        reBuild(category)\n      })\n      .selectAll('option')\n      .data([...new Set(Array.from(data.map(x => x.name)))])\n      .enter()\n      .append('option')\n      .text(d => d)\n      .attr('value', d => d)\n    glob.data.categories[category].current_gpe = d3.select('#selectGpe'+category).property('value')\n    build(category)\n  })\n}\n/**\n * @param category\n */\nfunction reBuild (category) {\n  const svg = d3.select('#cat' + category.charAt(0).toUpperCase() + category.slice(1))\n  svg.selectAll('*').remove()\n  console.log(glob.data.categories[category].current_gpe)\n  build(category)\n}\n/**\n * @param category\n */\nfunction build (category) {\n  const data = glob.data.categories[category].filter(x => x.name === glob.data.categories[category].current_gpe)[0]\n  const svg = d3.select('#cat' + category.charAt(0).toUpperCase() + category.slice(1))\n  // Create scales\n  const xScale = d3.scaleTime()\n    .domain([data.minX, data.maxX])\n    .range([0, glob.sizes.vizSvgSizes.innerWidth])\n  const yScale = d3.scaleLinear()\n    .domain([data.minY, data.maxY])\n    .range([glob.sizes.vizSvgSizes.innerHeight, 0])\n\n  // Create axes\n  const xAxis = d3.axisBottom(xScale)\n    .tickFormat(d3.timeFormat('%Y'))\n  const yAxis = d3.axisLeft(yScale)\n    .tickFormat(d3.format('.2f'))\n\n  // Draw axes\n  svg.append('g')\n    .attr('class', 'x axis')\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left}, ${glob.sizes.vizSvgSizes.innerHeight + glob.sizes.vizSvgSizes.margin.top})`)\n    .call(xAxis)\n  svg.append('g')\n    .attr('class', 'y axis')\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left}, ${glob.sizes.vizSvgSizes.margin.top})`)\n    .call(yAxis)\n  // Adding y label\n  svg.append('text')\n    .text('Price ($)')\n    .attr('x',glob.sizes.vizSvgSizes.margin.left/2)\n    .attr('y',glob.sizes.vizSvgSizes.margin.top/2)\n  // Draw curves\n  svg.append('g')\n    .attr('id', 'curvesCat')\n    .attr('transform', `translate(${glob.sizes.vizSvgSizes.margin.left}, ${glob.sizes.vizSvgSizes.margin.top})`)\n    .selectAll('path')\n    .data(data.data)\n    .enter()\n    .append('path')\n    .datum(d => d)\n    .attr('d', d3.line()\n      .x(function (e) { return xScale(e.date) })\n      .y(function (e) { return yScale(e.value) })\n    )\n    .attr('stroke', 'black')\n    .attr('stroke-width', '2')\n    .attr('fill', 'none')\n    .on('mouseenter', function (d) {\n      d3.select(this)\n        .attr('opacity', 1)\n        .attr('stroke-width', '4')\n        .attr('stroke', 'orange')\n      d3.select('body')\n        .append('div')\n        .attr('id', 'tooltip')\n        .style('position', 'absolute')\n        .style('z-index', '10')\n        .style('background', 'white')\n        .style('padding', '10px')\n        .style('border-radius', '5px')\n        .style('box-shadow', '1px 1px 5px black')\n        .style('left', (d3.event.pageX + glob.sizes.tooltip.offsetY) + 'px')\n        .style('top', (d3.event.pageY + glob.sizes.tooltip.offsetY) + 'px')\n        .html(`<strong>${d.map(x => x.product)[0]}</strong>`)\n    })\n    .on('mouseleave', function (d) {\n      d3.select(this)\n        .attr('stroke-width', '2')\n        .attr('stroke', 'black')\n      d3.select('#tooltip')\n        .remove()\n    })\n}\n","import * as resize from './scripts/resize.js'\nimport * as preprocessSeason from './scripts/preprocessing/seasonalTrends.js'\nimport * as preprocessInfl from './scripts/preprocessing/inflation.js'\nimport * as seasons from './scripts/graphics/seasonalTrends.js'\nimport * as inflation from './scripts/graphics/inflation.js'\nimport * as preprocessCat from './scripts/preprocessing/categories.js'\nimport * as categories from './scripts/graphics/categories.js'\nwindow.glob = {\n  sizes: {\n    vizDivSizes: { width: 0, height: 0 },\n    vizSvgSizes: {\n      width: 0,\n      height: 0,\n      margin: { top: 40, right: 80, bottom: 40, left: 80 },\n      innerWidth: 0,\n      innerHeight: 0\n    },\n    tooltip: {\n      offsetX: 15,\n      offsetY: 20\n    }\n  },\n  data: {}\n};\n(function (d3) {\n  // TODO: programmatically add the sections texts\n  // scroller.centerSections()\n  resize.updateResize()\n  // scroller.svgCenter()\n  d3.csv('data/data_norm.csv').then(function (dataNorm) {\n    d3.json('data/seasonalTrends.json').then(function (seasonalTrends) {\n      d3.json('data/inflationProducts.json').then(function (inflationProducts) {\n        d3.csv('data/inflation.csv').then(function (inflation) {\n          d3.json('data/categories_groups.json').then(function (categories) {\n            preprocessSeason.main(dataNorm, seasonalTrends)\n            preprocessInfl.main(dataNorm, inflationProducts, inflation)\n            preprocessCat.main(dataNorm, categories)\n            build(glob.data)\n          })\n        })\n      })\n    })\n  })\n\n  window.addEventListener('resize', function () {\n    d3.selectAll('.visualization-svg').selectAll('*').remove()\n    d3.selectAll('.controls').selectAll('*').remove()\n    resize.updateResize()\n    build()\n  })\n  function build (data) {\n    seasons.main(glob.data)\n    inflation.main()\n    categories.main()\n  }\n})(d3)\n"]}